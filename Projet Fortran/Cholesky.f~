      SUBROUTINE CHOLESKY(N,M,SIZEMAX,VECTEUR_DIAGONAL,
     L VECTEUR_MIN,VECTEUR_STOCKAGE,VECTEUR_CHOLESKY)
      IMPLICIT NONE
      INTEGER  I,J,K,N,M,SIZEMAX,POSITIONVECT,POSITIONVECT1,
     L POSITIONVECT2,POSITIONVECT3,K1,VECTEUR_MIN((N+1)*(M+1)),
     L VECTEUR_DIAGONAL((N+1)*(M+1))

      REAL VECTEUR_STOCKAGE(SIZEMAX),VECTEUR_CHOLESKY(SIZEMAX),
     L  SUMA,SUMB,SUMA2,SUMB2
      SUMA = 0
      SUMB = 0
      SUMB2= 0
      SUMA2= 0

  
      DO 1 I=1,(N+1)*(M+1)

         DO 2 J=VECTEUR_MIN(I),I-1

            POSITIONVECT = VECTEUR_DIAGONAL(I)-I+J
            SUMA = VECTEUR_STOCKAGE(POSITIONVECT)
            SUMB = 0

            DO 3 K=MAX(VECTEUR_MIN(I),VECTEUR_MIN(J)),J-1
               POSITIONVECT1 = VECTEUR_DIAGONAL(I)-I+K
               POSITIONVECT2 = VECTEUR_DIAGONAL(J)-J+K
               SUMB = SUMB + VECTEUR_CHOLESKY(POSITIONVECT1)*
     L                VECTEUR_CHOLESKY(POSITIONVECT2)
3           CONTINUE

            POSITIONVECT3 = VECTEUR_DIAGONAL(J)
            VECTEUR_CHOLESKY(POSITIONVECT) =(SUMA - SUMB)*
     L                   (1./VECTEUR_CHOLESKY(POSITIONVECT3))

2        CONTINUE

         POSITIONVECT = VECTEUR_DIAGONAL(I)
         SUMA2 =  VECTEUR_STOCKAGE(POSITIONVECT)
         SUMB2 = 0
         DO 4 K1=VECTEUR_MIN(I),I-1
            POSITIONVECT1 = VECTEUR_DIAGONAL(I)-I+K1
            SUMB2 = SUMB2 + VECTEUR_CHOLESKY(POSITIONVECT1)*
     L              VECTEUR_CHOLESKY(POSITIONVECT1)
4        CONTINUE

         VECTEUR_CHOLESKY(POSITIONVECT) = SQRT(SUMA2-SUMB2)
1     CONTINUE

      END
